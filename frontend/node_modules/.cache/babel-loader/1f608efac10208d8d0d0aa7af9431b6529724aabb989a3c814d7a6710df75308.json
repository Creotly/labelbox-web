{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CHAOS\\\\Documents\\\\GitHub\\\\labelbox-web-app\\\\frontend\\\\src\\\\components\\\\TaskUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport '../components/css/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskUploader = ({\n  onTaskUploaded\n}) => {\n  _s();\n  const [imageUrl, setImageUrl] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const uploadTask = () => {\n    if (!imageUrl) {\n      alert(\"Please provide a valid image URL.\");\n      return;\n    }\n    setLoading(true);\n    axios.post('http://localhost:5000/create-task', {\n      image_url: imageUrl\n    }).then(() => {\n      alert('Task uploaded!');\n      setImageUrl('');\n      onTaskUploaded(); // Trigger re-fetching the task\n    }).catch(() => setError('Failed to upload task. Please try again later.')).finally(() => setLoading(false));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-uploader\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Upload Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Image URL\",\n      value: imageUrl,\n      onChange: e => setImageUrl(e.target.value),\n      disabled: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: uploadTask,\n      disabled: loading,\n      children: loading ? 'Uploading...' : 'Upload'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskUploader, \"hMhbDKFDc4Tiu1dxvt0/wI4Gwqo=\");\n_c = TaskUploader;\nexport default TaskUploader;\nvar _c;\n$RefreshReg$(_c, \"TaskUploader\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","TaskUploader","onTaskUploaded","_s","imageUrl","setImageUrl","loading","setLoading","error","setError","uploadTask","alert","post","image_url","then","catch","finally","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","disabled","onClick","style","color","_c","$RefreshReg$"],"sources":["C:/Users/CHAOS/Documents/GitHub/labelbox-web-app/frontend/src/components/TaskUploader.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../components/css/styles.css';\r\n\r\nconst TaskUploader = ({ onTaskUploaded }) => {\r\n    const [imageUrl, setImageUrl] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    const uploadTask = () => {\r\n        if (!imageUrl) {\r\n            alert(\"Please provide a valid image URL.\");\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        axios.post('http://localhost:5000/create-task', { image_url: imageUrl })\r\n            .then(() => {\r\n                alert('Task uploaded!');\r\n                setImageUrl('');\r\n                onTaskUploaded(); // Trigger re-fetching the task\r\n            })\r\n            .catch(() => setError('Failed to upload task. Please try again later.'))\r\n            .finally(() => setLoading(false));\r\n    };\r\n\r\n    return (\r\n        <div className = \"task-uploader\">\r\n            <h3>Upload Task</h3>\r\n            <input\r\n                \r\n                type=\"text\"\r\n                placeholder=\"Image URL\"\r\n                value={imageUrl}\r\n                onChange={(e) => setImageUrl(e.target.value)}\r\n                disabled={loading}\r\n            />\r\n            <button onClick={uploadTask} disabled={loading}>\r\n                {loading ? 'Uploading...' : 'Upload'}\r\n            </button>\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaskUploader;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMa,UAAU,GAAGA,CAAA,KAAM;IACrB,IAAI,CAACN,QAAQ,EAAE;MACXO,KAAK,CAAC,mCAAmC,CAAC;MAC1C;IACJ;IACAJ,UAAU,CAAC,IAAI,CAAC;IAChBT,KAAK,CAACc,IAAI,CAAC,mCAAmC,EAAE;MAAEC,SAAS,EAAET;IAAS,CAAC,CAAC,CACnEU,IAAI,CAAC,MAAM;MACRH,KAAK,CAAC,gBAAgB,CAAC;MACvBN,WAAW,CAAC,EAAE,CAAC;MACfH,cAAc,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,CACDa,KAAK,CAAC,MAAMN,QAAQ,CAAC,gDAAgD,CAAC,CAAC,CACvEO,OAAO,CAAC,MAAMT,UAAU,CAAC,KAAK,CAAC,CAAC;EACzC,CAAC;EAED,oBACIP,OAAA;IAAKiB,SAAS,EAAG,eAAe;IAAAC,QAAA,gBAC5BlB,OAAA;MAAAkB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBtB,OAAA;MAEIuB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,WAAW;MACvBC,KAAK,EAAErB,QAAS;MAChBsB,QAAQ,EAAGC,CAAC,IAAKtB,WAAW,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC7CI,QAAQ,EAAEvB;IAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,eACFtB,OAAA;MAAQ8B,OAAO,EAAEpB,UAAW;MAACmB,QAAQ,EAAEvB,OAAQ;MAAAY,QAAA,EAC1CZ,OAAO,GAAG,cAAc,GAAG;IAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,EACRd,KAAK,iBAAIR,OAAA;MAAG+B,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAd,QAAA,EAAEV;IAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEd,CAAC;AAACnB,EAAA,CAtCIF,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AAwClB,eAAeA,YAAY;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}