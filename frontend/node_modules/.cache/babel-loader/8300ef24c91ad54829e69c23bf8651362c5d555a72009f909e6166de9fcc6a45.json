{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CHAOS\\\\Documents\\\\GitHub\\\\labelbox-web-app\\\\frontend\\\\src\\\\components\\\\AnnotationScreen.js\",\n  _s = $RefreshSig$();\nimport './styles.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnnotationScreen = () => {\n  _s();\n  const [task, setTask] = useState(null);\n  const [annotations, setAnnotations] = useState([]);\n  const [annotation, setAnnotation] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const fetchTask = () => {\n    setLoading(true);\n    axios.get('http://localhost:5000/get-task').then(res => setTask(res.data.task)).catch(() => {\n      setTask(null);\n      setError('Failed to load task. Please try again later.');\n    }).finally(() => setLoading(false));\n  };\n  useEffect(() => {\n    fetchTask();\n  }, []);\n  const saveAnnotations = () => {\n    if (annotations.length === 0) {\n      alert(\"Please add some annotations first.\");\n      return;\n    }\n    setLoading(true);\n    axios.post('http://localhost:5000/submit-annotation', {\n      task_id: task._id,\n      annotations\n    }).then(() => {\n      alert('Annotations saved!');\n      setAnnotations([]);\n    }).catch(() => alert('Failed to save annotations. Please try again.')).finally(() => setLoading(false));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this) : task ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"annotation-container\",\n      children: [/*#__PURE__*/_jsxDEV(Annotation, {\n        src: task.image_url,\n        annotations: annotations,\n        value: annotation,\n        onChange: setAnnotation,\n        onSubmit: newAnnotation => {\n          setAnnotations([...annotations, newAnnotation]);\n          setAnnotation({});\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"save-btn\",\n        onClick: saveAnnotations,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tasks available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(AnnotationScreen, \"nuUaRYaf6P261wi5mNNnXG5m2HM=\");\n_c = AnnotationScreen;\nexport default AnnotationScreen;\nvar _c;\n$RefreshReg$(_c, \"AnnotationScreen\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","AnnotationScreen","_s","task","setTask","useState","annotations","setAnnotations","annotation","setAnnotation","loading","setLoading","error","setError","fetchTask","axios","get","then","res","data","catch","finally","useEffect","saveAnnotations","length","alert","post","task_id","_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Annotation","src","image_url","value","onChange","onSubmit","newAnnotation","onClick","_c","$RefreshReg$"],"sources":["C:/Users/CHAOS/Documents/GitHub/labelbox-web-app/frontend/src/components/AnnotationScreen.js"],"sourcesContent":["import './styles.css'; // Import the CSS file\r\n\r\nconst AnnotationScreen = () => {\r\n    const [task, setTask] = useState(null);\r\n    const [annotations, setAnnotations] = useState([]);\r\n    const [annotation, setAnnotation] = useState({});\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    const fetchTask = () => {\r\n        setLoading(true);\r\n        axios.get('http://localhost:5000/get-task')\r\n            .then((res) => setTask(res.data.task))\r\n            .catch(() => {\r\n                setTask(null);\r\n                setError('Failed to load task. Please try again later.');\r\n            })\r\n            .finally(() => setLoading(false));\r\n    };    \r\n\r\n    useEffect(() => {\r\n        fetchTask();\r\n    }, []);\r\n\r\n    const saveAnnotations = () => {\r\n        if (annotations.length === 0) {\r\n            alert(\"Please add some annotations first.\");\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        axios.post('http://localhost:5000/submit-annotation', {\r\n            task_id: task._id,\r\n            annotations\r\n        })\r\n        .then(() => {\r\n            alert('Annotations saved!');\r\n            setAnnotations([]);\r\n        })\r\n        .catch(() => alert('Failed to save annotations. Please try again.'))\r\n        .finally(() => setLoading(false));\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {error ? (\r\n                <p className=\"error-text\">{error}</p>\r\n            ) : task ? (\r\n                <div className=\"annotation-container\">\r\n                    <Annotation\r\n                        src={task.image_url}\r\n                        annotations={annotations}\r\n                        value={annotation}\r\n                        onChange={setAnnotation}\r\n                        onSubmit={(newAnnotation) => {\r\n                            setAnnotations([...annotations, newAnnotation]);\r\n                            setAnnotation({});\r\n                        }}\r\n                    />\r\n                    <button className=\"save-btn\" onClick={saveAnnotations}>Save</button>\r\n                </div>\r\n            ) : (\r\n                <p>No tasks available.</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AnnotationScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}