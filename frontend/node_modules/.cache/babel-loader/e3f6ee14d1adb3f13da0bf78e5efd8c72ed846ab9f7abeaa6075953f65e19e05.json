{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CHAOS\\\\Documents\\\\GitHub\\\\labelbox-web-app\\\\frontend\\\\src\\\\components\\\\AnnotationScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Annotation from 'react-image-annotation';\nimport '../components/css/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnnotationScreen = () => {\n  _s();\n  const [task, setTask] = useState(null);\n  const [annotations, setAnnotations] = useState([]);\n  const [annotation, setAnnotation] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [isTouching, setIsTouching] = useState(false); // New state for tracking touch hold\n\n  const fetchTask = () => {\n    setLoading(true);\n    axios.get('http://localhost:5000/get-task').then(res => setTask(res.data.task)).catch(() => {\n      setTask(null); // Clear task if fetch fails\n      setError('Failed to load task. Please try again later.');\n    }).finally(() => setLoading(false));\n  };\n  useEffect(() => {\n    fetchTask();\n  }, []);\n  const saveAnnotations = () => {\n    if (annotations.length === 0) {\n      alert(\"Please add some annotations first.\");\n      return;\n    }\n    setLoading(true);\n    axios.post('http://localhost:5000/submit-annotation', {\n      task_id: task._id,\n      // Fixed key for MongoDB documents\n      annotations\n    }).then(() => {\n      alert('Annotations saved!');\n      setAnnotations([]);\n    }).catch(() => alert('Failed to save annotations. Please try again.')).finally(() => setLoading(false));\n  };\n  const handleTouchStart = () => {\n    setIsTouching(true);\n  };\n  const handleTouchEnd = () => {\n    setIsTouching(false);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this) : task ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"annotation-container\",\n        onTouchStart: handleTouchStart // Detect touch start\n        ,\n        onTouchEnd: handleTouchEnd // Detect touch end\n        ,\n        children: /*#__PURE__*/_jsxDEV(Annotation, {\n          src: task.image_url,\n          annotations: annotations,\n          value: annotation,\n          onChange: setAnnotation,\n          onSubmit: newAnnotation => {\n            if (isTouching) {\n              // Only allow annotation if touching\n              setAnnotations([...annotations, newAnnotation]);\n              setAnnotation({});\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveAnnotations,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tasks available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(AnnotationScreen, \"lpdWOxlWZRx9UKd6r7/OE+28ntI=\");\n_c = AnnotationScreen;\nexport default AnnotationScreen;\nvar _c;\n$RefreshReg$(_c, \"AnnotationScreen\");","map":{"version":3,"names":["React","useState","useEffect","axios","Annotation","jsxDEV","_jsxDEV","AnnotationScreen","_s","task","setTask","annotations","setAnnotations","annotation","setAnnotation","loading","setLoading","error","setError","isTouching","setIsTouching","fetchTask","get","then","res","data","catch","finally","saveAnnotations","length","alert","post","task_id","_id","handleTouchStart","handleTouchEnd","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onTouchStart","onTouchEnd","src","image_url","value","onChange","onSubmit","newAnnotation","onClick","_c","$RefreshReg$"],"sources":["C:/Users/CHAOS/Documents/GitHub/labelbox-web-app/frontend/src/components/AnnotationScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Annotation from 'react-image-annotation';\r\nimport '../components/css/styles.css';\r\n\r\nconst AnnotationScreen = () => {\r\n    const [task, setTask] = useState(null);\r\n    const [annotations, setAnnotations] = useState([]);\r\n    const [annotation, setAnnotation] = useState({});\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const [isTouching, setIsTouching] = useState(false); // New state for tracking touch hold\r\n\r\n    const fetchTask = () => {\r\n        setLoading(true);\r\n        axios.get('http://localhost:5000/get-task')\r\n            .then((res) => setTask(res.data.task))\r\n            .catch(() => {\r\n                setTask(null); // Clear task if fetch fails\r\n                setError('Failed to load task. Please try again later.');\r\n            })\r\n            .finally(() => setLoading(false));\r\n    };    \r\n\r\n    useEffect(() => {\r\n        fetchTask();\r\n    }, []);\r\n\r\n    const saveAnnotations = () => {\r\n        if (annotations.length === 0) {\r\n            alert(\"Please add some annotations first.\");\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        axios.post('http://localhost:5000/submit-annotation', {\r\n            task_id: task._id, // Fixed key for MongoDB documents\r\n            annotations\r\n        })\r\n        .then(() => {\r\n            alert('Annotations saved!');\r\n            setAnnotations([]);\r\n        })\r\n        .catch(() => alert('Failed to save annotations. Please try again.'))\r\n        .finally(() => setLoading(false));\r\n    };\r\n\r\n    const handleTouchStart = () => {\r\n        setIsTouching(true);\r\n    };\r\n\r\n    const handleTouchEnd = () => {\r\n        setIsTouching(false);\r\n    };\r\n\r\n    if (loading) return <p>Loading...</p>;\r\n\r\n    return (\r\n        <div>\r\n            {error ? (\r\n                <p>{error}</p>\r\n            ) : task ? (\r\n                <div>\r\n                    <div\r\n                        className=\"annotation-container\"\r\n                        onTouchStart={handleTouchStart} // Detect touch start\r\n                        onTouchEnd={handleTouchEnd} // Detect touch end\r\n                    >\r\n                        <Annotation\r\n                            src={task.image_url}\r\n                            annotations={annotations}\r\n                            value={annotation}\r\n                            onChange={setAnnotation}\r\n                            onSubmit={(newAnnotation) => {\r\n                                if (isTouching) { // Only allow annotation if touching\r\n                                    setAnnotations([...annotations, newAnnotation]);\r\n                                    setAnnotation({});\r\n                                }\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <button onClick={saveAnnotations}>Save</button>\r\n                </div>\r\n            ) : (\r\n                <p>No tasks available.</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AnnotationScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}